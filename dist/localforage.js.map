{"version":3,"sources":["webpack://localforage/webpack/universalModuleDefinition","webpack://localforage/webpack/bootstrap","webpack://localforage/(webpack)/buildin/global.js","webpack://localforage/./node_modules/@babel/runtime/helpers/typeof.js","webpack://localforage/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://localforage/./node_modules/@babel/runtime/helpers/createClass.js","webpack://localforage/./node_modules/lie/polyfill.js","webpack://localforage/./node_modules/lie/lib/browser.js","webpack://localforage/./node_modules/immediate/lib/browser.js","webpack://localforage/./src/utils/idb.js","webpack://localforage/./src/utils/isIndexedDBValid.js","webpack://localforage/./src/utils/createBlob.js","webpack://localforage/./src/utils/promise.js","webpack://localforage/./src/utils/normalizeKey.js","webpack://localforage/./src/drivers/indexeddb.js","webpack://localforage/./src/utils/isWebSQLValid.js","webpack://localforage/./src/utils/serializer.js","webpack://localforage/./src/drivers/websql.js","webpack://localforage/./src/drivers/localstorage.js","webpack://localforage/./src/utils/isLocalStorageValid.js","webpack://localforage/./src/utils/includes.js","webpack://localforage/./src/utils/isArray.js","webpack://localforage/./src/localforage.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","g","this","Function","e","_typeof2","obj","iterator","constructor","_typeof","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","global","Promise","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","state","queue","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","reject","resolve","getThen","then","apply","arguments","self","thenable","called","onError","onSuccess","result","tryCatch","status","out","push","len","error","reason","all","iterable","toString","values","Array","resolved","allResolver","outValue","race","response","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","oldQueue","task","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","isIndexedDBValid","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","require","normalizeKey","console","warn","String","supportsBlobs","DETECT_BLOB_SUPPORT_STORE","dbContexts","READ_ONLY","READ_WRITE","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","forages","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","arrayBuff","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_binStringToArrayBuffer","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","callback","_initReady","_dbInfo","createTransaction","retries","undefined","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","_support","iterate","req","openCursor","iterationNumber","cursor","getItem","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","readAsBinaryString","store","removeItem","clear","count","advanced","advance","keys","dropInstance","currentConfig","config","dbPromise","deleteObjectStore","deleteDatabase","onblocked","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","buffer","bytes","bufferToString","base64String","substring","localforageSerializer","serialize","valueType","marker","Error","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","errorCallback","executeSql","tryExecuteSql","sqlStatement","args","code","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","webSQLStorage","dbInfoPromise","description","size","item","storeNames","getAllStoreNames","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","array","searchElement","x","y","isNaN","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","idbDriver","WEBSQL","websqlDriver","LOCALSTORAGE","localstorageDriver","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","getDriver","currentDriverIndex","driverPromiseLoop","initDriver","libraryMethodsAndProperties","supports"],"mappings":"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","file":"localforage.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\t//\n/*!\n  localForage -- Offline Storage, Improved\n  Version 1.7.3\n  https://localforage.org\n  (c) 2019 Matthew Riley MacPherson and Thodoris Greasidis, Apache License 2.0\n  Previous versions (c) 2013 Mozilla, Apache License 2.0\n*/\n\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\t//\n/*!\n  localForage -- Offline Storage, Improved\n  Version 1.7.3\n  https://localforage.org\n  (c) 2019 Matthew Riley MacPherson and Thodoris Greasidis, Apache License 2.0\n  Previous versions (c) 2013 Mozilla, Apache License 2.0\n*/\n\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\t//\n/*!\n  localForage -- Offline Storage, Improved\n  Version 1.7.3\n  https://localforage.org\n  (c) 2019 Matthew Riley MacPherson and Thodoris Greasidis, Apache License 2.0\n  Previous versions (c) 2013 Mozilla, Apache License 2.0\n*/\n\n\telse if(typeof exports === 'object')\n\t\texports[\"localforage\"] = factory();\n\t//\n/*!\n  localForage -- Offline Storage, Improved\n  Version 1.7.3\n  https://localforage.org\n  (c) 2019 Matthew Riley MacPherson and Thodoris Greasidis, Apache License 2.0\n  Previous versions (c) 2013 Mozilla, Apache License 2.0\n*/\n\n\telse\n\t\troot[\"localforage\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = require('./lib');\n}\n","'use strict';\nvar immediate = require('immediate');\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n","'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n","function getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\nexport default idb;\n","import idb from 'utils/idb';\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari =\n            typeof openDatabase !== 'undefined' &&\n            /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n            !/Chrome/.test(navigator.userAgent) &&\n            !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch =\n            typeof fetch === 'function' &&\n            fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (\n            (!isSafari || hasFetch) &&\n            typeof indexedDB !== 'undefined' &&\n            // some outdated implementations of IDB that appear on Samsung\n            // and HTC Android devices <4.4 are missing IDBKeyRange\n            // See: https://github.com/mozilla/localForage/issues/128\n            // See: https://github.com/mozilla/localForage/issues/272\n            typeof IDBKeyRange !== 'undefined'\n        );\n    } catch (e) {\n        return false;\n    }\n}\n\nexport default isIndexedDBValid;\n","// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder =\n            typeof BlobBuilder !== 'undefined'\n                ? BlobBuilder\n                : typeof MSBlobBuilder !== 'undefined'\n                  ? MSBlobBuilder\n                  : typeof MozBlobBuilder !== 'undefined'\n                    ? MozBlobBuilder\n                    : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\nexport default createBlob;\n","// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    require('lie/polyfill');\n}\nexport default Promise;\n","export default function normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(`${key} used as a key, but it is not a string.`);\n        key = String(key);\n    }\n\n    return key;\n}\n","import isIndexedDBValid from 'utils/isIndexedDBValid';\nimport createBlob from 'utils/createBlob';\nimport idb from 'utils/idb';\nimport Promise from 'utils/promise';\nimport normalizeKey from 'utils/normalizeKey';\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nconst DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nlet supportsBlobs;\nconst dbContexts = {};\nconst toString = Object.prototype.toString;\n\n// Transaction Modes\nconst READ_ONLY = 'readonly';\nconst READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise(function(resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function(e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function() {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(\n                matchedEdge ||\n                    !matchedChrome ||\n                    parseInt(matchedChrome[1], 10) >= 43\n            );\n        };\n    }).catch(function() {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function(value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise(function(resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function() {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise(function(resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function(e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn(\n                            'The database \"' +\n                                dbInfo.name +\n                                '\"' +\n                                ' has been upgraded from version ' +\n                                e.oldVersion +\n                                ' to version ' +\n                                e.newVersion +\n                                ', but the storage \"' +\n                                dbInfo.storeName +\n                                '\" already exists.'\n                        );\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function(e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function() {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn(\n                'The database \"' +\n                    dbInfo.name +\n                    '\"' +\n                    \" can't be downgraded from version \" +\n                    dbInfo.db.version +\n                    ' to version ' +\n                    dbInfo.version +\n                    '.'\n            );\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise(function(resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function(e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function() {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        const forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo)\n        .then(db => {\n            dbInfo.db = db;\n            if (_isUpgradeNeeded(dbInfo)) {\n                // Reopen the database for upgrading.\n                return _getUpgradedConnection(dbInfo);\n            }\n            return db;\n        })\n        .then(db => {\n            // store the latest db reference\n            // in case the db was upgraded\n            dbInfo.db = dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n        })\n        .catch(err => {\n            _rejectReadiness(dbInfo, err);\n            throw err;\n        });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (\n            retries > 0 &&\n            (!dbInfo.db ||\n                err.name === 'InvalidStateError' ||\n                err.name === 'NotFoundError')\n        ) {\n            return Promise.resolve()\n                .then(() => {\n                    if (\n                        !dbInfo.db ||\n                        (err.name === 'NotFoundError' &&\n                            !dbInfo.db.objectStoreNames.contains(\n                                dbInfo.storeName\n                            ) &&\n                            dbInfo.version <= dbInfo.db.version)\n                    ) {\n                        // increase the db version, to create the new ObjectStore\n                        if (dbInfo.db) {\n                            dbInfo.version = dbInfo.db.version + 1;\n                        }\n                        // Reopen the database for upgrading.\n                        return _getUpgradedConnection(dbInfo);\n                    }\n                })\n                .then(() => {\n                    return _tryReconnect(dbInfo).then(function() {\n                        createTransaction(dbInfo, mode, callback, retries - 1);\n                    });\n                })\n                .catch(callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady().catch(ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise.all(initPromises)\n        .then(function() {\n            dbInfo.db = dbContext.db;\n            // Get the connection or open a new one without upgrade.\n            return _getOriginalConnection(dbInfo);\n        })\n        .then(function(db) {\n            dbInfo.db = db;\n            if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n                // Reopen the database for upgrading.\n                return _getUpgradedConnection(dbInfo);\n            }\n            return db;\n        })\n        .then(function(db) {\n            dbInfo.db = dbContext.db = db;\n            self._dbInfo = dbInfo;\n            // Share the final connection amongst related localForages.\n            for (var k = 0; k < forages.length; k++) {\n                var forage = forages[k];\n                if (forage !== self) {\n                    // Self is already up-to-date.\n                    forage._dbInfo.db = dbInfo.db;\n                    forage._dbInfo.version = dbInfo.version;\n                }\n            }\n        });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise(function(resolve, reject) {\n        self\n            .ready()\n            .then(function() {\n                createTransaction(self._dbInfo, READ_ONLY, function(\n                    err,\n                    transaction\n                ) {\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    try {\n                        var store = transaction.objectStore(\n                            self._dbInfo.storeName\n                        );\n                        var req = store.get(key);\n\n                        req.onsuccess = function() {\n                            var value = req.result;\n                            if (value === undefined) {\n                                value = null;\n                            }\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            resolve(value);\n                        };\n\n                        req.onerror = function() {\n                            reject(req.error);\n                        };\n                    } catch (e) {\n                        reject(e);\n                    }\n                });\n            })\n            .catch(reject);\n    });\n\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator) {\n    var self = this;\n\n    var promise = new Promise(function(resolve, reject) {\n        self\n            .ready()\n            .then(function() {\n                createTransaction(self._dbInfo, READ_ONLY, function(\n                    err,\n                    transaction\n                ) {\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    try {\n                        var store = transaction.objectStore(\n                            self._dbInfo.storeName\n                        );\n                        var req = store.openCursor();\n                        var iterationNumber = 1;\n\n                        req.onsuccess = function() {\n                            var cursor = req.result;\n\n                            if (cursor) {\n                                var value = cursor.value;\n                                if (_isEncodedBlob(value)) {\n                                    value = _decodeBlob(value);\n                                }\n                                var result = iterator(\n                                    value,\n                                    cursor.key,\n                                    iterationNumber++\n                                );\n\n                                // when the iterator callback retuns any\n                                // (non-`undefined`) value, then we stop\n                                // the iteration immediately\n                                if (result !== void 0) {\n                                    resolve(result);\n                                } else {\n                                    cursor.continue();\n                                }\n                            } else {\n                                resolve();\n                            }\n                        };\n\n                        req.onerror = function() {\n                            reject(req.error);\n                        };\n                    } catch (e) {\n                        reject(e);\n                    }\n                });\n            })\n            .catch(reject);\n    });\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise(function(resolve, reject) {\n        var dbInfo;\n        self\n            .ready()\n            .then(function() {\n                dbInfo = self._dbInfo;\n                if (toString.call(value) === '[object Blob]') {\n                    return _checkBlobSupport(dbInfo.db).then(function(\n                        blobSupport\n                    ) {\n                        if (blobSupport) {\n                            return value;\n                        }\n                        return _encodeBlob(value);\n                    });\n                }\n                return value;\n            })\n            .then(function(value) {\n                createTransaction(self._dbInfo, READ_WRITE, function(\n                    err,\n                    transaction\n                ) {\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    try {\n                        var store = transaction.objectStore(\n                            self._dbInfo.storeName\n                        );\n\n                        // The reason we don't _save_ null is because IE 10 does\n                        // not support saving the `null` type in IndexedDB. How\n                        // ironic, given the bug below!\n                        // See: https://github.com/mozilla/localForage/issues/161\n                        if (value === null) {\n                            value = undefined;\n                        }\n\n                        var req = store.put(value, key);\n\n                        transaction.oncomplete = function() {\n                            // Cast to undefined so the value passed to\n                            // callback/promise is the same as what one would get out\n                            // of `getItem()` later. This leads to some weirdness\n                            // (setItem('foo', undefined) will return `null`), but\n                            // it's not my fault localStorage is our baseline and that\n                            // it's weird.\n                            if (value === undefined) {\n                                value = null;\n                            }\n\n                            resolve(value);\n                        };\n                        transaction.onabort = transaction.onerror = function() {\n                            var err = req.error\n                                ? req.error\n                                : req.transaction.error;\n                            reject(err);\n                        };\n                    } catch (e) {\n                        reject(e);\n                    }\n                });\n            })\n            .catch(reject);\n    });\n\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise(function(resolve, reject) {\n        self\n            .ready()\n            .then(function() {\n                createTransaction(self._dbInfo, READ_WRITE, function(\n                    err,\n                    transaction\n                ) {\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    try {\n                        var store = transaction.objectStore(\n                            self._dbInfo.storeName\n                        );\n                        // We use a Grunt task to make this safe for IE and some\n                        // versions of Android (including those used by Cordova).\n                        // Normally IE won't like `.delete()` and will insist on\n                        // using `['delete']()`, but we have a build step that\n                        // fixes this for us now.\n                        var req = store.delete(key);\n                        transaction.oncomplete = function() {\n                            resolve();\n                        };\n\n                        transaction.onerror = function() {\n                            reject(req.error);\n                        };\n\n                        // The request will be also be aborted if we've exceeded our storage\n                        // space.\n                        transaction.onabort = function() {\n                            var err = req.error\n                                ? req.error\n                                : req.transaction.error;\n                            reject(err);\n                        };\n                    } catch (e) {\n                        reject(e);\n                    }\n                });\n            })\n            .catch(reject);\n    });\n\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise(function(resolve, reject) {\n        self\n            .ready()\n            .then(function() {\n                createTransaction(self._dbInfo, READ_WRITE, function(\n                    err,\n                    transaction\n                ) {\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    try {\n                        var store = transaction.objectStore(\n                            self._dbInfo.storeName\n                        );\n                        var req = store.clear();\n\n                        transaction.oncomplete = function() {\n                            resolve();\n                        };\n\n                        transaction.onabort = transaction.onerror = function() {\n                            var err = req.error\n                                ? req.error\n                                : req.transaction.error;\n                            reject(err);\n                        };\n                    } catch (e) {\n                        reject(e);\n                    }\n                });\n            })\n            .catch(reject);\n    });\n\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise(function(resolve, reject) {\n        self\n            .ready()\n            .then(function() {\n                createTransaction(self._dbInfo, READ_ONLY, function(\n                    err,\n                    transaction\n                ) {\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    try {\n                        var store = transaction.objectStore(\n                            self._dbInfo.storeName\n                        );\n                        var req = store.count();\n\n                        req.onsuccess = function() {\n                            resolve(req.result);\n                        };\n\n                        req.onerror = function() {\n                            reject(req.error);\n                        };\n                    } catch (e) {\n                        reject(e);\n                    }\n                });\n            })\n            .catch(reject);\n    });\n\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise(function(resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self\n            .ready()\n            .then(function() {\n                createTransaction(self._dbInfo, READ_ONLY, function(\n                    err,\n                    transaction\n                ) {\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    try {\n                        var store = transaction.objectStore(\n                            self._dbInfo.storeName\n                        );\n                        var advanced = false;\n                        var req = store.openCursor();\n\n                        req.onsuccess = function() {\n                            var cursor = req.result;\n                            if (!cursor) {\n                                // this means there weren't enough keys\n                                resolve(null);\n\n                                return;\n                            }\n\n                            if (n === 0) {\n                                // We have the first key, return it if that's what they\n                                // wanted.\n                                resolve(cursor.key);\n                            } else {\n                                if (!advanced) {\n                                    // Otherwise, ask the cursor to skip ahead n\n                                    // records.\n                                    advanced = true;\n                                    cursor.advance(n);\n                                } else {\n                                    // When we get here, we've got the nth key.\n                                    resolve(cursor.key);\n                                }\n                            }\n                        };\n\n                        req.onerror = function() {\n                            reject(req.error);\n                        };\n                    } catch (e) {\n                        reject(e);\n                    }\n                });\n            })\n            .catch(reject);\n    });\n\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise(function(resolve, reject) {\n        self\n            .ready()\n            .then(function() {\n                createTransaction(self._dbInfo, READ_ONLY, function(\n                    err,\n                    transaction\n                ) {\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    try {\n                        var store = transaction.objectStore(\n                            self._dbInfo.storeName\n                        );\n                        var req = store.openCursor();\n                        var keys = [];\n\n                        req.onsuccess = function() {\n                            var cursor = req.result;\n\n                            if (!cursor) {\n                                resolve(keys);\n                                return;\n                            }\n\n                            keys.push(cursor.key);\n                            cursor.continue();\n                        };\n\n                        req.onerror = function() {\n                            reject(req.error);\n                        };\n                    } catch (e) {\n                        reject(e);\n                    }\n                });\n            })\n            .catch(reject);\n    });\n\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    var currentConfig = this.config();\n    options = (typeof options !== 'function' && options) || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise.reject('Invalid arguments');\n    } else {\n        const isCurrentDb =\n            options.name === currentConfig.name && self._dbInfo.db;\n\n        const dbPromise = isCurrentDb\n            ? Promise.resolve(self._dbInfo.db)\n            : _getOriginalConnection(options).then(db => {\n                  const dbContext = dbContexts[options.name];\n                  const forages = dbContext.forages;\n                  dbContext.db = db;\n                  for (var i = 0; i < forages.length; i++) {\n                      forages[i]._dbInfo.db = db;\n                  }\n                  return db;\n              });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(db => {\n                _deferReadiness(options);\n\n                const dbContext = dbContexts[options.name];\n                const forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    const forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                const dropDBPromise = new Promise((resolve, reject) => {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = err => {\n                        const db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = () => {\n                        const db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise\n                    .then(db => {\n                        dbContext.db = db;\n                        for (var i = 0; i < forages.length; i++) {\n                            const forage = forages[i];\n                            _advanceReadiness(forage._dbInfo);\n                        }\n                    })\n                    .catch(err => {\n                        (\n                            _rejectReadiness(options, err) || Promise.resolve()\n                        ).catch(() => {});\n                        throw err;\n                    });\n            });\n        } else {\n            promise = dbPromise.then(db => {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                const newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                const dbContext = dbContexts[options.name];\n                const forages = dbContext.forages;\n\n                db.close();\n                for (let i = 0; i < forages.length; i++) {\n                    const forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                const dropObjectPromise = new Promise((resolve, reject) => {\n                    const req = idb.open(options.name, newVersion);\n\n                    req.onerror = err => {\n                        const db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = () => {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = () => {\n                        const db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise\n                    .then(db => {\n                        dbContext.db = db;\n                        for (let j = 0; j < forages.length; j++) {\n                            const forage = forages[j];\n                            forage._dbInfo.db = db;\n                            _advanceReadiness(forage._dbInfo);\n                        }\n                    })\n                    .catch(err => {\n                        (\n                            _rejectReadiness(options, err) || Promise.resolve()\n                        ).catch(() => {});\n                        throw err;\n                    });\n            });\n        }\n    }\n\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\nexport default asyncStorage;\n","function isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\nexport default isWebSQLValid;\n","/* eslint-disable no-bitwise */\nimport createBlob from 'utils/createBlob';\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH =\n    SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64String +=\n            BASE_CHARS[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String =\n            base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (\n        value &&\n        (valueType === '[object ArrayBuffer]' ||\n            (value.buffer &&\n                toString.call(value.buffer) === '[object ArrayBuffer]'))\n    ) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function() {\n            // Backwards-compatible prefix for the blob type.\n            var str =\n                BLOB_TYPE_PREFIX +\n                value.type +\n                '~' +\n                bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(\n        SERIALIZED_MARKER_LENGTH,\n        TYPE_SERIALIZED_MARKER_LENGTH\n    );\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\nexport default localforageSerializer;\n","import isWebSQLValid from 'utils/isWebSQLValid';\nimport serializer from 'utils/serializer';\nimport Promise from 'utils/promise';\nimport normalizeKey from 'utils/normalizeKey';\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n  t.executeSql(\n    `CREATE TABLE IF NOT EXISTS ${dbInfo.storeName} ` +\n      '(id INTEGER PRIMARY KEY, key unique, value)',\n    [],\n    callback,\n    errorCallback,\n  );\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n  var self = this;\n  var dbInfo = {\n    db: null,\n  };\n\n  if (options) {\n    for (var i in options) {\n      dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n    }\n  }\n\n  var dbInfoPromise = new Promise(function(resolve, reject) {\n    // Open the database; the openDatabase API will automatically\n    // create it for us if it doesn't exist.\n    try {\n      dbInfo.db = openDatabase(\n        dbInfo.name,\n        String(dbInfo.version),\n        dbInfo.description,\n        dbInfo.size,\n      );\n    } catch (e) {\n      return reject(e);\n    }\n\n    // Create our key/value table if it doesn't exist.\n    dbInfo.db.transaction(function(t) {\n      createDbTable(\n        t,\n        dbInfo,\n        function() {\n          self._dbInfo = dbInfo;\n          resolve();\n        },\n        function(t, error) {\n          reject(error);\n        },\n      );\n    }, reject);\n  });\n\n  dbInfo.serializer = serializer;\n  return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n  t.executeSql(\n    sqlStatement,\n    args,\n    callback,\n    function(t, error) {\n      if (error.code === error.SYNTAX_ERR) {\n        t.executeSql(\n          'SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\",\n          [dbInfo.storeName],\n          function(t, results) {\n            if (!results.rows.length) {\n              // if the table is missing (was deleted)\n              // re-create it table and retry\n              createDbTable(\n                t,\n                dbInfo,\n                function() {\n                  t.executeSql(sqlStatement, args, callback, errorCallback);\n                },\n                errorCallback,\n              );\n            } else {\n              errorCallback(t, error);\n            }\n          },\n          errorCallback,\n        );\n      } else {\n        errorCallback(t, error);\n      }\n    },\n    errorCallback,\n  );\n}\n\nfunction getItem(key, callback) {\n  var self = this;\n\n  key = normalizeKey(key);\n\n  var promise = new Promise(function(resolve, reject) {\n    self\n      .ready()\n      .then(function() {\n        var dbInfo = self._dbInfo;\n        dbInfo.db.transaction(function(t) {\n          tryExecuteSql(\n            t,\n            dbInfo,\n            `SELECT * FROM ${dbInfo.storeName} WHERE key = ? LIMIT 1`,\n            [key],\n            function(t, results) {\n              var result = results.rows.length ? results.rows.item(0).value : null;\n\n              // Check to see if this is serialized content we need to\n              // unpack.\n              if (result) {\n                result = dbInfo.serializer.deserialize(result);\n              }\n\n              resolve(result);\n            },\n            function(t, error) {\n              reject(error);\n            },\n          );\n        });\n      })\n      .catch(reject);\n  });\n\n  return promise;\n}\n\nfunction iterate(iterator, callback) {\n  var self = this;\n\n  var promise = new Promise(function(resolve, reject) {\n    self\n      .ready()\n      .then(function() {\n        var dbInfo = self._dbInfo;\n\n        dbInfo.db.transaction(function(t) {\n          tryExecuteSql(\n            t,\n            dbInfo,\n            `SELECT * FROM ${dbInfo.storeName}`,\n            [],\n            function(t, results) {\n              var rows = results.rows;\n              var length = rows.length;\n\n              for (var i = 0; i < length; i++) {\n                var item = rows.item(i);\n                var result = item.value;\n\n                // Check to see if this is serialized content\n                // we need to unpack.\n                if (result) {\n                  result = dbInfo.serializer.deserialize(result);\n                }\n\n                result = iterator(result, item.key, i + 1);\n\n                // void(0) prevents problems with redefinition\n                // of `undefined`.\n                if (result !== void 0) {\n                  resolve(result);\n                  return;\n                }\n              }\n\n              resolve();\n            },\n            function(t, error) {\n              reject(error);\n            },\n          );\n        });\n      })\n      .catch(reject);\n  });\n\n  return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n  var self = this;\n\n  key = normalizeKey(key);\n\n  var promise = new Promise(function(resolve, reject) {\n    self\n      .ready()\n      .then(function() {\n        // The localStorage API doesn't return undefined values in an\n        // \"expected\" way, so undefined is always cast to null in all\n        // drivers. See: https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n          value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        var dbInfo = self._dbInfo;\n        dbInfo.serializer.serialize(value, function(value, error) {\n          if (error) {\n            reject(error);\n          } else {\n            dbInfo.db.transaction(\n              function(t) {\n                tryExecuteSql(\n                  t,\n                  dbInfo,\n                  `INSERT OR REPLACE INTO ${dbInfo.storeName} ` + '(key, value) VALUES (?, ?)',\n                  [key, value],\n                  function() {\n                    resolve(originalValue);\n                  },\n                  function(t, error) {\n                    reject(error);\n                  },\n                );\n              },\n              function(sqlError) {\n                // The transaction failed; check\n                // to see if it's a quota error.\n                if (sqlError.code === sqlError.QUOTA_ERR) {\n                  // We reject the callback outright for now, but\n                  // it's worth trying to re-run the transaction.\n                  // Even if the user accepts the prompt to use\n                  // more storage on Safari, this error will\n                  // be called.\n                  //\n                  // Try to re-run the transaction.\n                  if (retriesLeft > 0) {\n                    resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                    return;\n                  }\n                  reject(sqlError);\n                }\n              },\n            );\n          }\n        });\n      })\n      .catch(reject);\n  });\n\n  return promise;\n}\n\nfunction setItem(key, value, callback) {\n  return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem(key, callback) {\n  var self = this;\n\n  key = normalizeKey(key);\n\n  var promise = new Promise(function(resolve, reject) {\n    self\n      .ready()\n      .then(function() {\n        var dbInfo = self._dbInfo;\n        dbInfo.db.transaction(function(t) {\n          tryExecuteSql(\n            t,\n            dbInfo,\n            `DELETE FROM ${dbInfo.storeName} WHERE key = ?`,\n            [key],\n            function() {\n              resolve();\n            },\n            function(t, error) {\n              reject(error);\n            },\n          );\n        });\n      })\n      .catch(reject);\n  });\n\n  return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear(callback) {\n  var self = this;\n\n  var promise = new Promise(function(resolve, reject) {\n    self\n      .ready()\n      .then(function() {\n        var dbInfo = self._dbInfo;\n        dbInfo.db.transaction(function(t) {\n          tryExecuteSql(\n            t,\n            dbInfo,\n            `DELETE FROM ${dbInfo.storeName}`,\n            [],\n            function() {\n              resolve();\n            },\n            function(t, error) {\n              reject(error);\n            },\n          );\n        });\n      })\n      .catch(reject);\n  });\n\n  return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length(callback) {\n  var self = this;\n\n  var promise = new Promise(function(resolve, reject) {\n    self\n      .ready()\n      .then(function() {\n        var dbInfo = self._dbInfo;\n        dbInfo.db.transaction(function(t) {\n          // Ahhh, SQL makes this one soooooo easy.\n          tryExecuteSql(\n            t,\n            dbInfo,\n            `SELECT COUNT(key) as c FROM ${dbInfo.storeName}`,\n            [],\n            function(t, results) {\n              var result = results.rows.item(0).c;\n              resolve(result);\n            },\n            function(t, error) {\n              reject(error);\n            },\n          );\n        });\n      })\n      .catch(reject);\n  });\n\n  return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key(n, callback) {\n  var self = this;\n\n  var promise = new Promise(function(resolve, reject) {\n    self\n      .ready()\n      .then(function() {\n        var dbInfo = self._dbInfo;\n        dbInfo.db.transaction(function(t) {\n          tryExecuteSql(\n            t,\n            dbInfo,\n            `SELECT key FROM ${dbInfo.storeName} WHERE id = ? LIMIT 1`,\n            [n + 1],\n            function(t, results) {\n              var result = results.rows.length ? results.rows.item(0).key : null;\n              resolve(result);\n            },\n            function(t, error) {\n              reject(error);\n            },\n          );\n        });\n      })\n      .catch(reject);\n  });\n\n  return promise;\n}\n\nfunction keys(callback) {\n  var self = this;\n\n  var promise = new Promise(function(resolve, reject) {\n    self\n      .ready()\n      .then(function() {\n        var dbInfo = self._dbInfo;\n        dbInfo.db.transaction(function(t) {\n          tryExecuteSql(\n            t,\n            dbInfo,\n            `SELECT key FROM ${dbInfo.storeName}`,\n            [],\n            function(t, results) {\n              var keys = [];\n\n              for (var i = 0; i < results.rows.length; i++) {\n                keys.push(results.rows.item(i).key);\n              }\n\n              resolve(keys);\n            },\n            function(t, error) {\n              reject(error);\n            },\n          );\n        });\n      })\n      .catch(reject);\n  });\n\n  return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n  return new Promise(function(resolve, reject) {\n    db.transaction(\n      function(t) {\n        t.executeSql(\n          'SELECT name FROM sqlite_master ' +\n            \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\",\n          [],\n          function(t, results) {\n            var storeNames = [];\n\n            for (var i = 0; i < results.rows.length; i++) {\n              storeNames.push(results.rows.item(i).name);\n            }\n\n            resolve({\n              db,\n              storeNames,\n            });\n          },\n          function(t, error) {\n            reject(error);\n          },\n        );\n      },\n      function(sqlError) {\n        reject(sqlError);\n      },\n    );\n  });\n}\n\nfunction dropInstance(options, callback) {\n  var currentConfig = this.config();\n  options = (typeof options !== 'function' && options) || {};\n  if (!options.name) {\n    options.name = options.name || currentConfig.name;\n    options.storeName = options.storeName || currentConfig.storeName;\n  }\n\n  var self = this;\n  var promise;\n  if (!options.name) {\n    promise = Promise.reject('Invalid arguments');\n  } else {\n    promise = new Promise(function(resolve) {\n      var db;\n      if (options.name === currentConfig.name) {\n        // use the db reference of the current instance\n        db = self._dbInfo.db;\n      } else {\n        db = openDatabase(options.name, '', '', 0);\n      }\n\n      if (!options.storeName) {\n        // drop all database tables\n        resolve(getAllStoreNames(db));\n      } else {\n        resolve({\n          db,\n          storeNames: [options.storeName],\n        });\n      }\n    }).then(function(operationInfo) {\n      return new Promise(function(resolve, reject) {\n        operationInfo.db.transaction(\n          function(t) {\n            function dropTable(storeName) {\n              return new Promise(function(resolve, reject) {\n                t.executeSql(\n                  `DROP TABLE IF EXISTS ${storeName}`,\n                  [],\n                  function() {\n                    resolve();\n                  },\n                  function(t, error) {\n                    reject(error);\n                  },\n                );\n              });\n            }\n\n            var operations = [];\n            for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n              operations.push(dropTable(operationInfo.storeNames[i]));\n            }\n\n            Promise.all(operations)\n              .then(function() {\n                resolve();\n              })\n              .catch(function(e) {\n                reject(e);\n              });\n          },\n          function(sqlError) {\n            reject(sqlError);\n          },\n        );\n      });\n    });\n  }\n\n  return promise;\n}\n\nvar webSQLStorage = {\n  _driver: 'webSQLStorage',\n  _initStorage: _initStorage,\n  _support: isWebSQLValid(),\n  iterate: iterate,\n  getItem: getItem,\n  setItem: setItem,\n  removeItem: removeItem,\n  clear: clear,\n  length: length,\n  key: key,\n  keys: keys,\n  dropInstance: dropInstance,\n};\n\nexport default webSQLStorage;\n","// If IndexedDB isn't available, we'll fall back to localStorage.\n// Note that this will have considerable performance and storage\n// side-effects (all data will be serialized on save and only data that\n// can be converted to a string via `JSON.stringify()` will be saved).\n\nimport isLocalStorageValid from 'utils/isLocalStorageValid';\nimport serializer from 'utils/serializer';\nimport Promise from 'utils/promise';\nimport normalizeKey from 'utils/normalizeKey';\n\nfunction _getKeyPrefix(options, defaultConfig) {\n  var keyPrefix = options.name + '/';\n\n  if (options.storeName !== defaultConfig.storeName) {\n    keyPrefix += options.storeName + '/';\n  }\n  return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n  var localStorageTestKey = '_localforage_support_test';\n\n  try {\n    localStorage.setItem(localStorageTestKey, true);\n    localStorage.removeItem(localStorageTestKey);\n\n    return false;\n  } catch (e) {\n    return true;\n  }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n  return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage(options) {\n  var self = this;\n  var dbInfo = {};\n  if (options) {\n    for (var i in options) {\n      dbInfo[i] = options[i];\n    }\n  }\n\n  dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n  if (!_isLocalStorageUsable()) {\n    return Promise.reject();\n  }\n\n  self._dbInfo = dbInfo;\n  dbInfo.serializer = serializer;\n\n  return Promise.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear(callback) {\n  var self = this;\n  var promise = self.ready().then(function() {\n    var keyPrefix = self._dbInfo.keyPrefix;\n\n    for (var i = localStorage.length - 1; i >= 0; i--) {\n      var key = localStorage.key(i);\n\n      if (key.indexOf(keyPrefix) === 0) {\n        localStorage.removeItem(key);\n      }\n    }\n  });\n\n  return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem(key, callback) {\n  var self = this;\n\n  key = normalizeKey(key);\n\n  var promise = self.ready().then(function() {\n    var dbInfo = self._dbInfo;\n    var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n    // If a result was found, parse it from the serialized\n    // string into a JS object. If result isn't truthy, the key\n    // is likely undefined and we'll pass it straight to the\n    // callback.\n    if (result) {\n      result = dbInfo.serializer.deserialize(result);\n    }\n\n    return result;\n  });\n\n  return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate(iterator, callback) {\n  var self = this;\n\n  var promise = self.ready().then(function() {\n    var dbInfo = self._dbInfo;\n    var keyPrefix = dbInfo.keyPrefix;\n    var keyPrefixLength = keyPrefix.length;\n    var length = localStorage.length;\n\n    // We use a dedicated iterator instead of the `i` variable below\n    // so other keys we fetch in localStorage aren't counted in\n    // the `iterationNumber` argument passed to the `iterate()`\n    // callback.\n    //\n    // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n    var iterationNumber = 1;\n\n    for (var i = 0; i < length; i++) {\n      var key = localStorage.key(i);\n      if (key.indexOf(keyPrefix) !== 0) {\n        continue;\n      }\n      var value = localStorage.getItem(key);\n\n      // If a result was found, parse it from the serialized\n      // string into a JS object. If result isn't truthy, the\n      // key is likely undefined and we'll pass it straight\n      // to the iterator.\n      if (value) {\n        value = dbInfo.serializer.deserialize(value);\n      }\n\n      value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n      if (value !== void 0) {\n        return value;\n      }\n    }\n  });\n\n  return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key(n, callback) {\n  var self = this;\n  var promise = self.ready().then(function() {\n    var dbInfo = self._dbInfo;\n    var result;\n    try {\n      result = localStorage.key(n);\n    } catch (error) {\n      result = null;\n    }\n\n    // Remove the prefix from the key, if a key is found.\n    if (result) {\n      result = result.substring(dbInfo.keyPrefix.length);\n    }\n\n    return result;\n  });\n\n  return promise;\n}\n\nfunction keys(callback) {\n  var self = this;\n  var promise = self.ready().then(function() {\n    var dbInfo = self._dbInfo;\n    var length = localStorage.length;\n    var keys = [];\n\n    for (var i = 0; i < length; i++) {\n      var itemKey = localStorage.key(i);\n      if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n        keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n      }\n    }\n\n    return keys;\n  });\n\n  return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length(callback) {\n  var self = this;\n  var promise = self.keys().then(function(keys) {\n    return keys.length;\n  });\n\n  return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem(key, callback) {\n  var self = this;\n\n  key = normalizeKey(key);\n\n  var promise = self.ready().then(function() {\n    var dbInfo = self._dbInfo;\n    localStorage.removeItem(dbInfo.keyPrefix + key);\n  });\n\n  return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem(key, value, callback) {\n  var self = this;\n\n  key = normalizeKey(key);\n\n  var promise = self.ready().then(function() {\n    // Convert undefined values to null.\n    // https://github.com/mozilla/localForage/pull/42\n    if (value === undefined) {\n      value = null;\n    }\n\n    // Save the original value to pass to the callback.\n    var originalValue = value;\n\n    return new Promise(function(resolve, reject) {\n      var dbInfo = self._dbInfo;\n      dbInfo.serializer.serialize(value, function(value, error) {\n        if (error) {\n          reject(error);\n        } else {\n          try {\n            localStorage.setItem(dbInfo.keyPrefix + key, value);\n            resolve(originalValue);\n          } catch (e) {\n            // localStorage capacity exceeded.\n            // TODO: Make this a specific error/event.\n            if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n              reject(e);\n            }\n            reject(e);\n          }\n        }\n      });\n    });\n  });\n\n  return promise;\n}\n\nfunction dropInstance(options, callback) {\n  options = (typeof options !== 'function' && options) || {};\n  if (!options.name) {\n    var currentConfig = this.config();\n    options.name = options.name || currentConfig.name;\n    options.storeName = options.storeName || currentConfig.storeName;\n  }\n\n  var self = this;\n  var promise;\n  if (!options.name) {\n    promise = Promise.reject('Invalid arguments');\n  } else {\n    promise = new Promise(function(resolve) {\n      if (!options.storeName) {\n        resolve(`${options.name}/`);\n      } else {\n        resolve(_getKeyPrefix(options, self._defaultConfig));\n      }\n    }).then(function(keyPrefix) {\n      for (var i = localStorage.length - 1; i >= 0; i--) {\n        var key = localStorage.key(i);\n\n        if (key.indexOf(keyPrefix) === 0) {\n          localStorage.removeItem(key);\n        }\n      }\n    });\n  }\n\n  return promise;\n}\n\nvar localStorageWrapper = {\n  _driver: 'localStorageWrapper',\n  _initStorage: _initStorage,\n  _support: isLocalStorageValid(),\n  iterate: iterate,\n  getItem: getItem,\n  setItem: setItem,\n  removeItem: removeItem,\n  clear: clear,\n  length: length,\n  key: key,\n  keys: keys,\n  dropInstance: dropInstance,\n};\n\nexport default localStorageWrapper;\n","function isLocalStorageValid() {\n    try {\n        return (\n            typeof localStorage !== 'undefined' &&\n            'setItem' in localStorage &&\n            // in IE8 typeof localStorage.setItem === 'object'\n            !!localStorage.setItem\n        );\n    } catch (e) {\n        return false;\n    }\n}\n\nexport default isLocalStorageValid;\n","const sameValue = (x, y) =>\n    x === y ||\n    (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\n\nconst includes = (array, searchElement) => {\n    const len = array.length;\n    let i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nexport default includes;\n","const isArray =\n    Array.isArray ||\n    function(arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n    };\n\nexport default isArray;\n","import idbDriver from 'drivers/indexeddb';\nimport websqlDriver from 'drivers/websql';\nimport localstorageDriver from 'drivers/localstorage';\nimport serializer from 'utils/serializer';\nimport Promise from 'utils/promise';\nimport includes from 'utils/includes';\nimport isArray from 'utils/isArray';\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nconst DefinedDrivers = {};\n\nconst DriverSupport = {};\n\nconst DefaultDrivers = {\n  INDEXEDDB: idbDriver,\n  WEBSQL: websqlDriver,\n  LOCALSTORAGE: localstorageDriver,\n};\n\nconst DefaultDriverOrder = [\n  DefaultDrivers.INDEXEDDB._driver,\n  DefaultDrivers.WEBSQL._driver,\n  DefaultDrivers.LOCALSTORAGE._driver,\n];\n\nconst OptionalDriverMethods = ['dropInstance'];\n\nconst LibraryMethods = [\n  'clear',\n  'getItem',\n  'iterate',\n  'key',\n  'keys',\n  'length',\n  'removeItem',\n  'setItem',\n].concat(OptionalDriverMethods);\n\nconst DefaultConfig = {\n  description: '',\n  driver: DefaultDriverOrder.slice(),\n  name: 'localforage',\n  // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n  // we can use without a prompt.\n  size: 4980736,\n  storeName: 'keyvaluepairs',\n  version: 1.0,\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n  localForageInstance[libraryMethod] = function() {\n    const _args = arguments;\n    return localForageInstance.ready().then(function() {\n      return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n    });\n  };\n}\n\nfunction extend() {\n  for (let i = 1; i < arguments.length; i++) {\n    const arg = arguments[i];\n\n    if (arg) {\n      for (let key in arg) {\n        if (arg.hasOwnProperty(key)) {\n          if (isArray(arg[key])) {\n            arguments[0][key] = arg[key].slice();\n          } else {\n            arguments[0][key] = arg[key];\n          }\n        }\n      }\n    }\n  }\n\n  return arguments[0];\n}\n\nclass LocalForage {\n  constructor(options) {\n    for (let driverTypeKey in DefaultDrivers) {\n      if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n        const driver = DefaultDrivers[driverTypeKey];\n        const driverName = driver._driver;\n        this[driverTypeKey] = driverName;\n\n        if (!DefinedDrivers[driverName]) {\n          // we don't need to wait for the promise,\n          // since the default drivers can be defined\n          // in a blocking manner\n          this.defineDriver(driver);\n        }\n      }\n    }\n\n    this._defaultConfig = extend({}, DefaultConfig);\n    this._config = extend({}, this._defaultConfig, options);\n    this._driverSet = null;\n    this._initDriver = null;\n    this._ready = false;\n    this._dbInfo = null;\n\n    this._wrapLibraryMethodsWithReady();\n    this.setDriver(this._config.driver).catch(() => {});\n  }\n\n  // Set any config values for localForage; can be called anytime before\n  // the first API call (e.g. `getItem`, `setItem`).\n  // We loop through options so we don't overwrite existing config\n  // values.\n  config(options) {\n    // If the options argument is an object, we use it to set values.\n    // Otherwise, we return either a specified config value or all\n    // config values.\n    if (typeof options === 'object') {\n      // If localforage is ready and fully initialized, we can't set\n      // any new configuration values. Instead, we return an error.\n      if (this._ready) {\n        return new Error(\"Can't call config() after localforage \" + 'has been used.');\n      }\n\n      for (let i in options) {\n        if (i === 'storeName') {\n          options[i] = options[i].replace(/\\W/g, '_');\n        }\n\n        if (i === 'version' && typeof options[i] !== 'number') {\n          return new Error('Database version must be a number.');\n        }\n\n        this._config[i] = options[i];\n      }\n\n      // after all config options are set and\n      // the driver option is used, try setting it\n      if ('driver' in options && options.driver) {\n        return this.setDriver(this._config.driver);\n      }\n\n      return true;\n    } else if (typeof options === 'string') {\n      return this._config[options];\n    } else {\n      return this._config;\n    }\n  }\n\n  // Used to define a custom driver, shared across all instances of\n  // localForage.\n  defineDriver(driverObject, callback, errorCallback) {\n    const promise = new Promise(function(resolve, reject) {\n      try {\n        const driverName = driverObject._driver;\n        const complianceError = new Error(\n          'Custom driver not compliant; see ' +\n            'https://mozilla.github.io/localForage/#definedriver',\n        );\n\n        // A driver name should be defined and not overlap with the\n        // library-defined, default drivers.\n        if (!driverObject._driver) {\n          reject(complianceError);\n          return;\n        }\n\n        const driverMethods = LibraryMethods.concat('_initStorage');\n        for (let i = 0, len = driverMethods.length; i < len; i++) {\n          const driverMethodName = driverMethods[i];\n\n          // when the property is there,\n          // it should be a method even when optional\n          const isRequired = !includes(OptionalDriverMethods, driverMethodName);\n          if (\n            (isRequired || driverObject[driverMethodName]) &&\n            typeof driverObject[driverMethodName] !== 'function'\n          ) {\n            reject(complianceError);\n            return;\n          }\n        }\n\n        const configureMissingMethods = function() {\n          const methodNotImplementedFactory = function(methodName) {\n            return function() {\n              const error = new Error(\n                `Method ${methodName} is not implemented by the current driver`,\n              );\n              const promise = Promise.reject(error);\n              return promise;\n            };\n          };\n\n          for (let i = 0, len = OptionalDriverMethods.length; i < len; i++) {\n            const optionalDriverMethod = OptionalDriverMethods[i];\n            if (!driverObject[optionalDriverMethod]) {\n              driverObject[optionalDriverMethod] = methodNotImplementedFactory(\n                optionalDriverMethod,\n              );\n            }\n          }\n        };\n\n        configureMissingMethods();\n\n        const setDriverSupport = function(support) {\n          if (DefinedDrivers[driverName]) {\n            console.info(`Redefining LocalForage driver: ${driverName}`);\n          }\n          DefinedDrivers[driverName] = driverObject;\n          DriverSupport[driverName] = support;\n          // don't use a then, so that we can define\n          // drivers that have simple _support methods\n          // in a blocking manner\n          resolve();\n        };\n\n        if ('_support' in driverObject) {\n          if (driverObject._support && typeof driverObject._support === 'function') {\n            driverObject._support().then(setDriverSupport, reject);\n          } else {\n            setDriverSupport(!!driverObject._support);\n          }\n        } else {\n          setDriverSupport(true);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n\n    return promise;\n  }\n\n  driver() {\n    return this._driver || null;\n  }\n\n  getDriver(driverName, callback, errorCallback) {\n    const getDriverPromise = DefinedDrivers[driverName]\n      ? Promise.resolve(DefinedDrivers[driverName])\n      : Promise.reject(new Error('Driver not found.'));\n\n    return getDriverPromise;\n  }\n\n  getSerializer(callback) {\n    const serializerPromise = Promise.resolve(serializer);\n    return serializerPromise;\n  }\n\n  ready(callback) {\n    const self = this;\n\n    const promise = self._driverSet.then(() => {\n      if (self._ready === null) {\n        self._ready = self._initDriver();\n      }\n\n      return self._ready;\n    });\n\n    return promise;\n  }\n\n  setDriver(drivers, callback, errorCallback) {\n    const self = this;\n\n    if (!isArray(drivers)) {\n      drivers = [drivers];\n    }\n\n    const supportedDrivers = this._getSupportedDrivers(drivers);\n\n    function setDriverToConfig() {\n      self._config.driver = self.driver();\n    }\n\n    function extendSelfWithDriver(driver) {\n      self._extend(driver);\n      setDriverToConfig();\n\n      self._ready = self._initStorage(self._config);\n      return self._ready;\n    }\n\n    function initDriver(supportedDrivers) {\n      return function() {\n        let currentDriverIndex = 0;\n\n        function driverPromiseLoop() {\n          while (currentDriverIndex < supportedDrivers.length) {\n            let driverName = supportedDrivers[currentDriverIndex];\n            currentDriverIndex++;\n\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self\n              .getDriver(driverName)\n              .then(extendSelfWithDriver)\n              .catch(driverPromiseLoop);\n          }\n\n          setDriverToConfig();\n          const error = new Error('No available storage method found.');\n          self._driverSet = Promise.reject(error);\n          return self._driverSet;\n        }\n\n        return driverPromiseLoop();\n      };\n    }\n\n    // There might be a driver initialization in progress\n    // so wait for it to finish in order to avoid a possible\n    // race condition to set _dbInfo\n    const oldDriverSetDone =\n      this._driverSet !== null ? this._driverSet.catch(() => Promise.resolve()) : Promise.resolve();\n\n    this._driverSet = oldDriverSetDone\n      .then(() => {\n        const driverName = supportedDrivers[0];\n        self._dbInfo = null;\n        self._ready = null;\n\n        return self.getDriver(driverName).then((driver) => {\n          self._driver = driver._driver;\n          setDriverToConfig();\n          self._wrapLibraryMethodsWithReady();\n          self._initDriver = initDriver(supportedDrivers);\n        });\n      })\n      .catch(() => {\n        setDriverToConfig();\n        const error = new Error('No available storage method found.');\n        self._driverSet = Promise.reject(error);\n        return self._driverSet;\n      });\n\n    return this._driverSet;\n  }\n\n  supports(driverName) {\n    return !!DriverSupport[driverName];\n  }\n\n  _extend(libraryMethodsAndProperties) {\n    extend(this, libraryMethodsAndProperties);\n  }\n\n  _getSupportedDrivers(drivers) {\n    const supportedDrivers = [];\n    for (let i = 0, len = drivers.length; i < len; i++) {\n      const driverName = drivers[i];\n      if (this.supports(driverName)) {\n        supportedDrivers.push(driverName);\n      }\n    }\n    return supportedDrivers;\n  }\n\n  _wrapLibraryMethodsWithReady() {\n    // Add a stub for each driver API method that delays the call to the\n    // corresponding driver method until localForage is ready. These stubs\n    // will be replaced by the driver methods as soon as the driver is\n    // loaded, so there is no performance impact.\n    for (let i = 0, len = LibraryMethods.length; i < len; i++) {\n      callWhenReady(this, LibraryMethods[i]);\n    }\n  }\n\n  createInstance(options) {\n    return new LocalForage(options);\n  }\n}\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\nexport default new LocalForage();\n"],"sourceRoot":""}