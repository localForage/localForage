!function(){var Promise=window.Promise;function S4(){return((1+Math.random())*65536|0).toString(16).substring(1)}function guid(){return S4()+S4()+"-"+S4()+"-"+S4()+"-"+S4()+"-"+S4()+S4()+S4()}var OfflineStore=function(name){this.data=null;this.name=name};_.extend(OfflineStore.prototype,{save:function(callback){var _this=this;return new Promise(function(resolve,reject){localforage.setItem(_this.name,JSON.stringify(_this.data),function(data){if(callback){callback(data)}resolve(data)})})},create:function(model,callbacks){var _this=this;return new Promise(function(resolve,reject){if(_this.data){if(!model.id)model.id=model.attributes.id=guid();_this.data[model.id]=model;_this.save(function(){if(callbacks.success){callbacks.success(model)}resolve(model)})}else{localforage.getItem(_this.name,function(data){_this.data=JSON.parse(data)||{};if(!model.id)model.id=model.attributes.id=guid();_this.data[model.id]=model;_this.save(function(){if(callbacks.success){callbacks.success(model)}resolve(model)})})}})},update:function(model,callbacks){var _this=this;return new Promise(function(resolve,reject){if(_this.data){_this.data[model.id]=model;_this.save(function(){if(callbacks.success){callbacks.success(model)}resolve(model)})}else{localforage.getItem(_this.name,function(data){_this.data=JSON.parse(data)||{};_this.data[model.id]=model;_this.save(function(){if(callbacks.success){callbacks.success(model)}resolve(model)})})}})},find:function(model,callbacks){var _this=this;return new Promise(function(resolve,reject){if(_this.data){if(callbacks.success){callbacks.success(_this.data[model.id])}resolve(_this.data[model.id])}else{localforage.getItem(_this.name,function(data){_this.data=JSON.parse(data)||{};if(callbacks.success){callbacks.success(_this.data[model.id])}resolve(_this.data[model.id])})}})},findAll:function(callbacks){var _this=this;return new Promise(function(resolve,reject){if(_this.data){if(callbacks.success){callbacks.success(_.values(_this.data))}resolve(_.values(_this.data))}else{localforage.getItem(_this.name,function(data){_this.data=JSON.parse(data)||{};if(callbacks.success){callbacks.success(_.values(_this.data))}resolve(_.values(_this.data))})}})},destroy:function(model,callbacks){var _this=this;return new Promise(function(resolve,reject){if(_this.data){delete _this.data[model.id];_this.save(function(){if(callbacks.success){callbacks.success(model)}resolve(model)})}else{localforage.getItem(__this.name,function(data){_this.data=JSON.parse(data)||{};delete _this.data[model.id];_this.save(function(){if(callbacks.success){callbacks.success(model)}resolve(model)})})}})}});function localforageSync(store,method,model,options){switch(method){case"read":return model.id?store.find(model,options):store.findAll(options);break;case"create":return store.create(model,options);break;case"update":return store.update(model,options);break;case"delete":return store.destroy(model,options);break}}Backbone.localforage={OfflineStore:OfflineStore,sync:function(name){var sync,offlineStore;if(name){offlineStore=new OfflineStore(name);sync=function(method,model,options){return localforageSync.apply(null,[offlineStore].concat([].slice.call(arguments,0)))};sync.offlineStore=offlineStore}else{sync=function(method,model,options){var offlineStore=model.collection&&model.collection.sync.offlineStore;if(offlineStore){return localforageSync.apply(null,[offlineStore].concat([].slice.call(arguments,0)))}return Backbone.sync.apply(this,arguments)}}return sync}};return OfflineStore}.call(this);